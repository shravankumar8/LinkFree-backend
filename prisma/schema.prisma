// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id         String  @id @default(uuid())
  email String  @unique
  name  String?
  password String?
  isSetupComplete Boolean @default(false)
  username String? @unique
  provider provider @default(local)
  displayName String?
  profilePic  String?
  bio String?
  pages Page[]
  analytics Analytics[]
  providerId String?
  createdAt DateTime @default(now())
 updatedAt DateTime @default(now())
}
enum provider {
  local
  google
  github
}

model Page{
  id String @id @default(uuid())
  userId String
  templateId String?
  slug      String    @unique
  bio         String? 
  socialLinks   Json
  background    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDefault Boolean @default(false)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  links Json? @default("[]")
visibility  Boolean  @default(true)
views Int      @default(0)
  

}
model Analytics{
  id String @id @default(uuid())
 userId          String    @unique

  profileViews   Int      @default(0)
  linkClicks     Int      @default(0)
  engagementRate Float    @default(0.0)
  lastUpdated    DateTime @default(now())
user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
 @@index([userId])
}
// model Link {
//   id        String   @id @default(uuid())
//   pageId    String
//   title     String?  // Optional title for the link
//   url       String
//   clicks    Int      @default(0)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @default(now())
//   page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
// }

// model Template {
//   id              String    @id @default(uuid())
//   name            String
//   description     String?
//   // Example field: background image URL for the template
//   backgroundImage String?
//   // JSON field to store style settings (colors, layout, fonts, etc.)
//   cardStyle       Json?
//   createdAt       DateTime  @default(now())
//   updatedAt       DateTime  @default(now())
//   pages           Page[]
// }